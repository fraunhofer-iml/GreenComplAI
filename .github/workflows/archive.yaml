name: Deploy

on:
  push:
    tags:
      - '*/v*'

jobs:
  build-and-push-frontend:
    if: startsWith(github.ref, 'refs/tags/frontend/')
    name: Build and Push Docker Images for Frontend App
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
      id-token: write
      attestations: write

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          filter: tree:0

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '22'
          cache: 'npm'
      - name: Install dependencies
        run: npm ci && npx prisma generate --generator jsclient
      - uses: nrwl/nx-set-shas@v4
      - run: npx nx format:check

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to Docker Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: 'Build images'
        run: |
          INPUT_GITHUB_TOKEN=${{ secrets.GITHUB_TOKEN }} npx nx container frontend

  build-and-push-entity-management-svc:
    if: startsWith(github.ref, 'refs/tags/entity-management-svc/')
    name: Build and Push Docker Images for Entity Management Service App
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
      id-token: write
      attestations: write

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          filter: tree:0

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '22'
          cache: 'npm'
      - name: Install dependencies
        run: npm ci && npx prisma generate --generator jsclient
      - uses: nrwl/nx-set-shas@v4
      - run: npx nx format:check

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to Docker Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: 'Build images'
        run: |
          INPUT_GITHUB_TOKEN=${{ secrets.GITHUB_TOKEN }} npx nx container entity-management-svc

  build-and-push-bff:
    if: startsWith(github.ref, 'refs/tags/bff/')
    name: Build and Push Docker Images for BFF App
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
      id-token: write
      attestations: write

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          filter: tree:0

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '22'
          cache: 'npm'
      - name: Install dependencies
        run: npm ci && npx prisma generate --generator jsclient
      - uses: nrwl/nx-set-shas@v4
      - run: npx nx format:check
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to Docker Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: 'Build images'
        run: |
          INPUT_GITHUB_TOKEN=${{ secrets.GITHUB_TOKEN }} npx nx container bff
