services:
  ############
  # DATABASE #
  ############

  postgres:
    image: postgres:16.1
    restart: unless-stopped
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=skala_ap2
    logging:
      options:
        max-size: 10m
        max-file: '3'
    ports:
      - '5432:5432'
    volumes:
      - postgres-data:/var/lib/postgresql/data

  #########
  # UTILS #
  #########

  rabbitmq:
    image: rabbitmq:3-management-alpine
    ports:
      - '5672:5672'
      - '15672:15672'
    environment:
      RABBITMQ_LOGS: '-error'

  minio:
    container_name: minio
    image: minio/minio:RELEASE.2025-07-23T15-54-02Z
    ports:
      - '9000:9000'
      - '9001:9001'
    environment:
      MINIO_ROOT_USER: root
      MINIO_ROOT_PASSWORD: rootpassword
      MINIO_DEFAULT_BUCKET: greencomplai
    command: server /data --console-address ":9001"

  minio-setup:
    image: minio/mc:RELEASE.2025-07-21T05-28-08Z
    depends_on:
      - minio
    entrypoint: >
      sh -c "
        echo '### MinIO setup started' &&
        mc alias set local http://minio:9000 root rootpassword &&
        if mc ls local/greencompai 2>/dev/null; then
          echo 'Bucket greencomplai already exists';
        else
          mc mb local/greencomplai
          mc anonymous set download local/greencomplai
          echo 'Bucket greencomplai created and set to public access';
        fi &&
        echo '### MinIO setup ended'
      "

  #########
  # BASYX #
  #########

  aas-env:
    image: eclipsebasyx/aas-environment:2.0.0-SNAPSHOT
    container_name: aas-env
    environment:
      - SERVER_PORT=8081
    volumes:
      - ./aas:/application/aas
      - ./basyx/aas-env.properties:/application/application.properties
    ports:
      - '8081:8081'
    restart: always
    depends_on:
      aas-registry:
        condition: service_healthy
      sm-registry:
        condition: service_healthy
      mongo:
        condition: service_healthy
    profiles:
      - dpp
  aas-registry:
    image: eclipsebasyx/aas-registry-log-mongodb:2.0.0-SNAPSHOT
    container_name: aas-registry
    ports:
      - '8082:8080'
    environment:
      - SERVER_PORT=8080
    volumes:
      - ./basyx/aas-registry.yml:/workspace/config/application.yml
    restart: always
    depends_on:
      mongo:
        condition: service_healthy
    profiles:
      - dpp
  sm-registry:
    image: eclipsebasyx/submodel-registry-log-mongodb:2.0.0-SNAPSHOT
    container_name: sm-registry
    ports:
      - '8083:8080'
    environment:
      - SERVER_PORT=8080
    volumes:
      - ./basyx/sm-registry.yml:/workspace/config/application.yml
    restart: always
    depends_on:
      mongo:
        condition: service_healthy
    profiles:
      - dpp
  aas-discovery:
    image: eclipsebasyx/aas-discovery:2.0.0-SNAPSHOT
    container_name: aas-discovery
    environment:
      - SERVER_PORT=8081
    volumes:
      - ./basyx/aas-discovery.properties:/application/application.properties
    ports:
      - '8084:8081'
    restart: always
    depends_on:
      mongo:
        condition: service_healthy
    profiles:
      - dpp
  mongo:
    image: mongo:5.0.10
    container_name: mongo
    environment:
      MONGO_INITDB_ROOT_USERNAME: mongoAdmin
      MONGO_INITDB_ROOT_PASSWORD: mongoPassword
    restart: always
    healthcheck:
      test: mongo
      interval: 10s
      timeout: 5s
      retries: 5
    profiles:
      - dpp
  aas-web-ui:
    image: eclipsebasyx/aas-gui:SNAPSHOT
    container_name: aas-ui
    ports:
      - '3333:3000'
    environment:
      AAS_REGISTRY_PATH: http://localhost:8082/shell-descriptors
      SUBMODEL_REGISTRY_PATH: http://localhost:8083/submodel-descriptors
      AAS_REPO_PATH: http://localhost:8081/shells
      SUBMODEL_REPO_PATH: http://localhost:8081/submodels
      CD_REPO_PATH: http://localhost:8081/concept-descriptions
      AAS_DISCOVERY_PATH: http://localhost:8084/lookup/shells
    restart: always
    depends_on:
      aas-env:
        condition: service_healthy
    profiles:
      - dpp

networks:
  default:
    name: ap2-dev
    driver: bridge

volumes:
  postgres-data:
